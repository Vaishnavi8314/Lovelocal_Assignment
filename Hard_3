Question : 
Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.

Logic : 
An integer is taken as an input.A variable is intialized to keep the track of count of number of digit 1.Iteration is done from the least significant bit to most significant bit.For the current digit position pos,three values are calculated high , present, low.High variable represents the part of the number to the left of the current position.Low variable represents the part of the number to the right of the current position.Present variable represents the digit at the current position.If present == 0, the count is determined by the high.If present == 1, the count is determined by both high and low.If present > 1, the count is determined by the multiples of 10^pos in high.The total count is updated.

Algorithm :
1.An integer n is the user input.
2.Initialize a variable count to 0 to store the total count of digit 1.
3.Iterate through each digit position from least significant digit to most significant digit.
4.For the current digit position pos, calculate three values high,present,low.
5.High: The part of the number to the left of the current position.
6.Present: The digit at the current position.
7.Low: The part of the number to the right of the current position.
8.Calculate the contribution of the current digit position to the total count of digit 1.
9.If present == 0, the count is determined by the high.
10.If present == 1, the count is determined by both high and low.
11.If present > 1, the count is determined by the multiples of 10^pos in high.
12.The total count is updated and is printed.

Code : (Python)

